<template>
	<view>
		<view class="page" ref="box">
			<layout title="最近使用" v-if="recentUse.length">
				<view class="y-CenterCon" style="margin: 6px 0;">
					<view v-for="(innerItem) in recentUse" :key="innerItem.title" :data-obj="innerItem" class='icon' @tap='jump'>
						<image class="img" :src="'https://windrunner_max.gitee.io/imgpath/LightApp/'+innerItem.img"></image>
						<text class="text" style="margin-top: 6px;">{{innerItem.title}}</text>
					</view>
				</view>
			</layout>

			<layout title="应用列表">
				<view v-for="(item,index) in lightList" :key="index">
					<view class="y-CenterCon" style="margin-top: 20px;">
						<view v-for="(innerItem,innderIndex) in item" :key="innderIndex" :data-obj="innerItem" class='icon' @tap='jump'>
							<image class="img" resize="contain " :src="'https://windrunner_max.gitee.io/imgpath/LightApp/'+innerItem.img"></image>
							<text class="text">{{innerItem.title}}</text>
						</view>
					</view>
				</view>
			</layout>

		</view>
		<view style="background-color: #F8F8F8;" :style="pageFill"></view>
	</view>
</template>

<script>
	const app = getApp()
	const dom = weex.requireModule('dom');
	import layout from "@/components/layout.nvue"
	export default {
		components: {
			layout
		},
		data() {
			return {
				lightList: [],
				recentUse: [],
				pageFill: {
					width: "750rpx",
					height: "0rpx"
				}
			}
		},
		onReady: function() {
			var that = this;
			app.ajax({
				load: 1,
				url: "https://windrunner_max.gitee.io/imgpath/LightApp/config.json",
				success: function(res) {
					var extList = [];
					var innerList = [];
					res.data.map(function(value, index) {
						if (index && index % 4 === 0) {
							extList.push(innerList);
							innerList = [];
						}
						innerList.push(value);
						return value;
					});
					extList.push(innerList);
					that.lightList = extList;
					that.$nextTick(() => { that.resize() })
				}
			})
			uni.getStorage({
				key: "recent",
				success: function(res) {
					that.recentUse = res.data
				}
			})
		},
		methods: {
			jump: function(e) {
				var obj = e.currentTarget.dataset.obj;
				uni.navigateTo({
					url: '/pages/Home/auxiliary/webview?url=' + encodeURIComponent(obj.url)
				})
				var curUse = this.recentUse;
				if (JSON.stringify(curUse).indexOf(JSON.stringify(obj)) == -1) {
					curUse.unshift(obj);
					this.recentUse = curUse.splice(0, 4);
					uni.setStorage({
						key: "recent",
						data: this.recentUse
					})
				}
			},
			resize: function() {
				const that = this;
				const result = dom.getComponentRect(this.$refs.box, option => {
					that.pageFill.height = (uni.getSystemInfoSync().windowHeight - option.size.height) + 'px';
					console.log(uni.getSystemInfoSync().windowHeight, option.size.height);
				})
			},
		}
	}
</script>

<style>
	.icon {
		width: 175rpx;
		flex-direction: column;
		justify-content: center;
		align-items: center;
		padding: 5px 0;
	}

	.img {
		width: 35px;
		height: 35px;
		border-radius: 30px;
		justify-content: center;
		flex-direction: row;
		align-items: center;
		margin-bottom: 10px;
	}

	.name {
		margin-top: 6px;
	}
</style>
